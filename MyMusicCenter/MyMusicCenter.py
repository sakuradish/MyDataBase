#============================================================================================================================================================================================================================================================
import sys
sys.path.append('../MyLogger/')
sys.path.append('../MyDataBase/')
from MyLogger import MyLogger
MyLogger = MyLogger.GetInstance()
#============================================================================================================================================================================================================================================================
import os
import glob
from mutagen.mp4 import MP4
import time
import shutil
#============================================================================================================================================================================================================================================================
# convert hiragana/katakana to alphabet
from pykakasi import kakasi
kakasi = kakasi()
kakasi.setMode("H", "a")
kakasi.setMode("K", "a")
conv = kakasi.getConverter()
#============================================================================================================================================================================================================================================================
# convert zenkaku to hankaku
import jaconv
#============================================================================================================================================================================================================================================================
ALBUM = "\xa9alb"
ALBUM_ARTIST = "aART"
ALBUM_SORT_ORDER = "soal"
ARTIST = "\xa9ART"
ARTIST_SORT_ORDER = "soar"
GENRE = "\xa9gen"
#TITLE_SORT_ORDER = "sonm"
TRACK_TITLE = "\xa9nam"
GENRE3 = "gnre"
#============================================================================================================================================================================================================================================================
# ./GENRE/__01_Favorites__/ARTIST/ALBUM/SONG.m4a
# ./GENRE/__02_Compilations__/ARTIST/ALBUM/SONG.m4a
BASE = "./data/"
#------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
def main():
    paths = [ path for path in glob.glob(BASE+"/**/*", recursive=True) if not os.path.isdir(path) ]
    for path in paths:
        if path.find(".m4a") != -1:
            handleM4A(path)
        elif path.find(".mp3") != -1:
            handleMP3(path)
        else:
            handleELSE(path)
#============================================================================================================================================================================================================================================================
## @brief mp3を別フォルダにコピー
# @note
# mp4以外はまだサポートしていないので、手動で編集しやすいようにコピー
def handleMP3(path):
    copyfrom = os.path.dirname(path)
    copyto = BASE+"mp3/"+os.path.dirname(path)
    if not os.path.exists(copyto):
        shutil.copytree(copyfrom, copyto)
#============================================================================================================================================================================================================================================================
def handleM4A(path):
    # ./GENRE/Compilations/ARTIST/ALBUM/SONG.m4a
    temp = path.replace("\\","/")
    #------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    song = temp[temp.rfind("/")+1:]
    song = jaconv.z2h(song, kana=False, digit=True, ascii=True)
    song = jaconv.h2z(song, kana=True, digit=False, ascii=False)
    temp = temp[:temp.rfind("/")]
    #------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    album = temp[temp.rfind("/")+1:]
    album = jaconv.z2h(album, kana=False, digit=True, ascii=True)
    album = jaconv.h2z(album, kana=True, digit=False, ascii=False)
    temp = temp[:temp.rfind("/")]
    #------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    artist = temp[temp.rfind("/")+1:]
    artist = jaconv.z2h(artist, kana=False, digit=True, ascii=True)
    artist = jaconv.h2z(artist, kana=True, digit=False, ascii=False)
    temp = temp[:temp.rfind("/")]
    #------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------  
    genre = temp[temp.rfind("/")+1:]
    genre = jaconv.z2h(genre, kana=False, digit=True, ascii=True)
    genre = jaconv.h2z(genre, kana=True, digit=False, ascii=False)
    temp = temp[:temp.rfind("/")]
    #------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------  
    # take artist as Compilations
    category = temp[temp.rfind("/")+1:]
    temp = temp[:temp.rfind("/")]
    if category == "__02_Compilations__":
        artist = "__Compilations__"
    elif category == "__01_Favorites__":
        pass
    #------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    mp4 = MP4(path)
    #------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    MyLogger.info(path)
    mp4.tags[TRACK_TITLE] = song
    mp4.tags[ALBUM] = album
    mp4.tags[ALBUM_ARTIST] = artist
    mp4.tags[ALBUM_SORT_ORDER] = conv.do(album)
    mp4.tags[ARTIST] = artist
    mp4.tags[ARTIST_SORT_ORDER] = conv.do(artist)
    mp4.tags[GENRE] = genre
    MyLogger.info("mp4.tags[TRACK_TITLE]", str(mp4.tags[TRACK_TITLE]))
    MyLogger.info("mp4.tags[ALBUM]", str(mp4.tags[ALBUM]))
    MyLogger.info("mp4.tags[ALBUM_ARTIST]", str(mp4.tags[ALBUM_ARTIST]))
    MyLogger.info("mp4.tags[ALBUM_SORT_ORDER]", str(mp4.tags[ALBUM_SORT_ORDER]))
    MyLogger.info("mp4.tags[ARTIST]", str(mp4.tags[ARTIST]))
    MyLogger.info("mp4.tags[ARTIST_SORT_ORDER]", str(mp4.tags[ARTIST_SORT_ORDER]))
    MyLogger.info("mp4.tags[GENRE]", str(mp4.tags[GENRE]))
    #------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    #    mp4.save()
#============================================================================================================================================================================================================================================================
def handleELSE(path):
    pass
#============================================================================================================================================================================================================================================================
if __name__ == "__main__":
    main()
#============================================================================================================================================================================================================================================================
